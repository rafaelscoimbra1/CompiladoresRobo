#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <fstream>
#include <string>
#include <vector>
#include <stack>
#include <list>

using namespace std;

fstream in;
ofstream out;
int linha = 1;
int coluna = 0;
char lookahead;
string palavra;
//string estado;
int cont[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
string flag = "Inicial";
stack <string> pilha;

//Tabela para uso no Sintático/Semântico;
string table[77][60] = {{"State","programainicio","execucaoinicio","fimexecucao","fimprograma","definainstrucao","ID","como","inicio","fim","repita","NUM","vezes","fimrepita","enquanto","faca","fimpara","se","entao","fimse","senao","fimsenao","esquerda","direita","mova","passos","vire","para","pare","finalize","apague","lampada","acenda","aguarde","ate","frente","pronto","parado","ocupado","movimentando","robo","bloqueada","acesa","a","$","Programa","Declaracao","ListaDeclaracao","Comando","ListaComando","Bloco","Iteracao","Laco","Condicional","ComplementoCondicional","Sentido","Instrucao","Direcao","Estado","Condicao"},{"0","s1"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"1"," ","r3"," "," ","s4"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","3","2"," "," "," "," "," "," "," "," "," "," "," "," "},{"2"," ","s5"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"3"," ","r3"," "," ","s4"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","3","6"," "," "," "," "," "," "," "," "," "," "," "," "},{"4"," "," "," "," "," ","s7"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"5"," "," ","r10"," "," ","s21"," ","s15","r10","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","9","8","10","11","12","13"," "," ","14"," "," "," "},{"6"," ","r2"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"7"," "," "," "," "," "," ","s27"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"8"," "," ","s28"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"9"," "," ","r10"," "," ","s21"," ","s15","r10","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","9","29","10","11","12","13"," "," ","14"," "," "," "},{"10"," ","r4","r4"," ","r4","r4"," ","r4","r4","r4"," "," ","r4","r4"," ","r4","r4"," ","r4"," ","r4"," "," ","r4"," ","r4"," ","r4","r4","r4"," ","r4","r4"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"11"," ","r5","r5"," ","r5","r5"," ","r5","r5","r5"," "," ","r5","r5"," ","r5","r5"," ","r5"," ","r5"," "," ","r5"," ","r5"," ","r5","r5","r5"," ","r5","r5"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"12"," ","r6","r6"," ","r6","r6"," ","r6","r6","r6"," "," ","r6","r6"," ","r6","r6"," ","r6"," ","r6"," "," ","r6"," ","r6"," ","r6","r6","r6"," ","r6","r6"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"13"," ","r7","r7"," ","r7","r7"," ","r7","r7","r7"," "," ","r7","r7"," ","r7","r7"," ","r7"," ","r7"," "," ","r7"," ","r7"," ","r7","r7","r7"," ","r7","r7"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"14"," ","r8","r8"," ","r8","r8"," ","r8","r8","r8"," "," ","r8","r8"," ","r8","r8"," ","r8"," ","r8"," "," ","r8"," ","r8"," ","r8","r8","r8"," ","r8","r8"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"15"," "," ","r10"," "," ","s21"," ","s15","r10","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","9","30","10","11","12","13"," "," ","14"," "," "," "},{"16"," "," "," "," "," "," "," "," "," "," ","s31"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"17"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s36","s37"," "," "," "," "," "," "," ","s35"," "," "," ","s38"," "," "," "," ","s33"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","34"," ","32"},{"18"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s36","s37"," "," "," "," "," "," "," ","s35"," "," "," ","s38"," "," "," "," ","s33"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","34"," ","39"},{"19"," "," "," "," "," "," "," "," "," "," ","s40"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"20"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s41"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"21"," ","r21","r21"," ","r21","r21"," ","r21","r21","r21"," "," ","r21","r21"," ","r21","r21"," ","r21"," ","r21"," "," ","r21"," ","r21"," ","r21","r21","r21"," ","r21","r21"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"22"," ","r22","r22"," ","r22","r22"," ","r22","r22","r22"," "," ","r22","r22"," ","r22","r22"," ","r22"," ","r22"," "," ","r22"," ","r22"," ","r22","r22","r22"," ","r22","r22"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"23"," ","r23","r23"," ","r23","r23"," ","r23","r23","r23"," "," ","r23","r23"," ","r23","r23"," ","r23"," ","r23"," "," ","r23"," ","r23"," ","r23","r23","r23"," ","r23","r23"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"24"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s42"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"25"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s43"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"26"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s44"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"27"," "," "," "," "," ","s21"," ","s15"," ","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","45"," ","10","11","12","13"," "," ","14"," "," "," "},{"28"," "," "," ","s46"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"29"," "," ","r9"," "," "," "," "," ","r9"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"30"," "," "," "," "," "," "," "," ","s47"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"31"," "," "," "," "," "," "," "," "," "," "," ","s48"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"32"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s49"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"33"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s51","s52","s53","s54"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","50"," "},{"34"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s55"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"35"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s56"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"36"," ","r27","r27"," ","r27","r27"," ","r27","r27","r27"," "," ","r27","r27","r27","r27","r27","r27","r27"," ","r27"," "," ","r27"," ","r27"," ","r27","r27","r27"," ","r27","r27"," "," "," "," "," "," ","r27"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"37"," ","r28","r28"," ","r28","r28"," ","r28","r28","r28"," "," ","r28","r28","r28","r28","r28","r28","r28"," ","r28"," "," ","r28"," ","r28"," ","r28","r28","r28"," ","r28","r28"," "," "," "," "," "," ","r28"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"38"," ","r29","r29"," ","r29","r29"," ","r29","r29","r29"," "," ","r29","r29","r29","r29","r29","r29","r29"," ","r29"," "," ","r29"," ","r29"," ","r29","r29","r29"," ","r29","r29"," "," "," "," "," "," ","r29"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"39"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s57"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"40"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s58"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"41"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s60","s61"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","59"," "," "," "," "},{"42"," ","r24","r24"," ","r24","r24"," ","r24","r24","r24"," "," ","r24","r24"," ","r24","r24"," ","r24"," ","r24"," "," ","r24"," ","r24"," ","r24","r24","r24"," ","r24","r24"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"43"," ","r25","r25"," ","r25","r25"," ","r25","r25","r25"," "," ","r25","r25"," ","r25","r25"," ","r25"," ","r25"," "," ","r25"," ","r25"," ","r25","r25","r25"," ","r25","r25"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"44"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s36","s37"," "," "," "," "," "," "," ","s35"," "," "," ","s38"," "," "," "," ","s33"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","34"," ","62"},{"45"," ","r1"," "," ","r1"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"46"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","acc"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"47"," ","r11","r11"," ","r11","r11"," ","r11","r11","r11"," "," ","r11","r11"," ","r11","r11"," ","r11"," ","r11"," "," ","r11"," ","r11"," ","r11","r11","r11"," ","r11","r11"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"48"," "," "," "," "," ","s21"," ","s15"," ","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","63"," ","10","11","12","13"," "," ","14"," "," "," "},{"49"," "," "," "," "," ","s21"," ","s15"," ","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","64"," ","10","11","12","13"," "," ","14"," "," "," "},{"50"," ","r34","r34"," ","r34","r34"," ","r34","r34","r34"," "," ","r34","r34","r34","r34","r34","r34","r34"," ","r34"," "," ","r34"," ","r34"," ","r34","r34","r34"," ","r34","r34"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"51"," ","r30","r30"," ","r30","r30"," ","r30","r30","r30"," "," ","r30","r30","r30","r30","r30","r30","r30"," ","r30"," "," ","r30"," ","r30"," ","r30","r30","r30"," ","r30","r30"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"52"," ","r31","r31"," ","r31","r31"," ","r31","r31","r31"," "," ","r31","r31","r31","r31","r31","r31","r31"," ","r31"," "," ","r31"," ","r31"," ","r31","r31","r31"," ","r31","r31"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"53"," ","r32","r32"," ","r32","r32"," ","r32","r32","r32"," "," ","r32","r32","r32","r32","r32","r32","r32"," ","r32"," "," ","r32"," ","r32"," ","r32","r32","r32"," ","r32","r32"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"54"," ","r33","r33"," ","r33","r33"," ","r33","r33","r33"," "," ","r33","r33","r33","r33","r33","r33","r33"," ","r33"," "," ","r33"," ","r33"," ","r33","r33","r33"," ","r33","r33"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"55"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s65"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"56"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s66"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"57"," "," "," "," "," ","s21"," ","s15"," ","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","67"," ","10","11","12","13"," "," ","14"," "," "," "},{"58"," ","r19","r19"," ","r19","r19"," ","r19","r19","r19"," "," ","r19","r19"," ","r19","r19"," ","r19"," ","r19"," "," ","r19"," ","r19"," ","r19","r19","r19"," ","r19","r19"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"59"," ","r20","r20"," ","r20","r20"," ","r20","r20","r20"," "," ","r20","r20"," ","r20","r20"," ","r20"," ","r20"," "," ","r20"," ","r20"," ","r20","r20","r20"," ","r20","r20"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"60"," ","r17","r17"," ","r17","r17"," ","r17","r17","r17"," "," ","r17","r17"," ","r17","r17"," ","r17"," ","r17"," "," ","r17"," ","r17"," ","r17","r17","r17"," ","r17","r17"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"61"," ","r18","r18"," ","r18","r18"," ","r18","r18","r18"," "," ","r18","r18"," ","r18","r18"," ","r18"," ","r18"," "," ","r18"," ","r18"," ","r18","r18","r18"," ","r18","r18"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"62"," ","r26","r26"," ","r26","r26"," ","r26","r26","r26"," "," ","r26","r26"," ","r26","r26"," ","r26"," ","r26"," "," ","r26"," ","r26"," ","r26","r26","r26"," ","r26","r26"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"63"," "," "," "," "," "," "," "," "," "," "," "," ","s68"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"64"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s69"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"65"," ","r35","r35"," ","r35","r35"," ","r35","r35","r35"," "," ","r35","r35","r35","r35","r35","r35","r35"," ","r35"," "," ","r35"," ","r35"," ","r35","r35","r35"," ","r35","r35"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"66"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s36","s37"," "," "," "," "," "," "," "," "," "," "," ","s38"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","70"," "," "},{"67"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s71"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"68"," ","r12","r12"," ","r12","r12"," ","r12","r12","r12"," "," ","r12","r12"," ","r12","r12"," ","r12"," ","r12"," "," ","r12"," ","r12"," ","r12","r12","r12"," ","r12","r12"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"69"," ","r13","r13"," ","r13","r13"," ","r13","r13","r13"," "," ","r13","r13"," ","r13","r13"," ","r13"," ","r13"," "," ","r13"," ","r13"," ","r13","r13","r13"," ","r13","r13"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"70"," ","r36","r36"," ","r36","r36"," ","r36","r36","r36"," "," ","r36","r36","r36","r36","r36","r36","r36"," ","r36"," "," ","r36"," ","r36"," ","r36","r36","r36"," ","r36","r36"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"71"," ","r16","r16"," ","r16","r16"," ","r16","r16","r16"," "," ","r16","r16"," ","r16","r16"," ","r16","s73","r16"," "," ","r16"," ","r16"," ","r16","r16","r16"," ","r16","r16"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","72"," "," "," "," "," "},{"72"," ","r14","r14"," ","r14","r14"," ","r14","r14","r14"," "," ","r14","r14"," ","r14","r14"," ","r14"," ","r14"," "," ","r14"," ","r14"," ","r14","r14","r14"," ","r14","r14"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"73"," "," "," "," "," ","s21"," ","s15"," ","s16"," "," "," ","s17"," "," ","s18"," "," "," "," "," "," ","s19"," ","s20"," ","s22","s23","s24"," ","s25","s26"," "," "," "," "," "," "," "," "," "," "," "," "," "," ","74"," ","10","11","12","13"," "," ","14"," "," "," "},{"74"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","s75"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},{"75"," ","r15","r15"," ","r15","r15"," ","r15","r15","r15"," "," ","r15","r15"," ","r15","r15"," ","r15"," ","r15"," "," ","r15"," ","r15"," ","r15","r15","r15"," ","r15","r15"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "}};

typedef struct token {   
    int line;
    string type;
    int col_init;
    string lexema;
    int col_finish;
}token;

typedef struct lista {
    struct token no;
    struct lista *ant;
    struct lista *prox;
}lista, *Lista;

typedef struct node {
    int nivel = 0;
    int nfilhos = 0;
    struct token no;
    struct node *filhos[8];
}node, *Node;

Node arvore;
list<token> lex;
Lista lexico = NULL;
stack<string> estados;
stack<token> sintatico;
int cont;

/*Função que ler os caracteres de um id e insere na variável 'palavra', a qual é o token final*/
void id (char letter) { // ler todas as letras
    palavra.push_back(letter);
    while ((lookahead >= 'a' && lookahead <= 'z') || (lookahead >= 'A' && lookahead <= 'Z') || (lookahead >= 0 && lookahead <= 9)) {
	in.get(letter);
        coluna++;
        palavra.push_back(letter);
        lookahead = in.peek();
    }
}

void numero (char digit) { // Ler todos os digitos
    palavra.push_back(digit);
    while (lookahead >= 0 && lookahead <= 9){
        in.get(digit);
        coluna++;
        palavra.push_back(digit);
        lookahead = in.peek();
    }
}

void comment (char letter) { // ler todos os caracteres que fazem parte dos comentários
    while ((letter != '\n'))
        in.get(letter);
        coluna++;
}

string keyword (string lexema) {
    string palav = string(lexema);
	transform(palav.begin(), palav.end(), palav.begin(), ::tolower);

    if (palav == "programainicio"){
        return "KEY";
    } else if (palav == "execucaoinicio"){
        return "KEY";
    } else if (palav == "definainstrucao"){
        return "KEY";
    } else if (palav == "inicio"){
        return "KEY";
    } else if (palav == "como"){
        return "KEY";
    } else if (palav == "repita"){
        return "KEY";
    } else if (palav == "vezes"){
        return "KEY";
    } else if (palav == "se"){
        return "KEY";
    } else if (palav == "entao"){
        return "KEY";
    } else if (palav == "senao"){
        return "KEY";
    } else if (palav == "mova"){
        return "KEY";
    } else if (palav == "passos"){
        return "KEY";
    } else if (palav == "vire"){
        return "KEY";
    } else if (palav == "para"){
        return "KEY";
    } else if (palav == "pare"){
        return "KEY";
    } else if (palav == "finalize"){
        return "KEY";
    } else if (palav == "apague"){
        return "KEY";
    } else if (palav == "lampada"){
        return "KEY";
    } else if (palav == "acenda"){
        return "KEY";
    } else if (palav == "aguarde"){
        return "KEY";
    } else if (palav == "movimentando"){
        return "KEY";
    } else if (palav == "robo"){
        return "KEY";
    } else if (palav == "pronto"){
        return "KEY";
    } else if (palav == "ocupado"){
        return "KEY";
    } else if (palav == "parado"){
        return "KEY";
    } else if (palav == "frente"){
        return "KEY";
    } else if (palav == "bloqueada"){
        return "KEY";
    } else if (palav == "direita"){
        return "KEY";
    } else if (palav == "esquerda"){
        return "KEY";
    } else if (palav == "acessa"){
        return "KEY";
    } else if (palav == "ate"){
        return "KEY";
    } else if (palav == "a"){
        return "KEY";
    } else if (palav == "apagada"){
        return "KEY";
    } else if (palav == "fimsenao"){
        return "KEY";
    } else if (palav == "fimse"){
        return "KEY";
    } else if (palav == "fim"){
        return "KEY";
    } else if (palav == "fimrepita"){
        return "KEY";
    } else if (palav == "fimexecucao"){
        return "KEY";
    } else if (palav == "fimprograma"){
        return "KEY";
    }
    return "ERRO";
}

string typeToken () {
    //Criar função que reconhece as keywords
    if (flag=="id") {
		if (keyword(palavra)=="KEY") {
            return "KEY";
        } else {
            return "ID";
        }
    } else if (flag=="numero") {
	     return "NUM";
    }
}

void insertList () { // insere o novo lexema (token) na lista
    token word;
    string type;

    word.lexema = string(palavra);
    word.col_finish = coluna;
    word.col_init = word.col_finish - palavra.length();
    word.line = linha;
    type = typeToken();
    word.type = string(type);

    /* Lista para inserir os tokens */
    Lista i = NULL;
    Lista c = (Lista) malloc(sizeof(struct lista));

    if (lexico){
        for (i = lexico; (lexico->prox); i = lexico->prox);
        c->no = word;
        i->prox = c;
        c->ant = i;
        c->prox=NULL;
    }else {
        c->no = word;
        c->prox = NULL;
        c->ant = NULL;
        lexico = c;
    }

    lex.push_back(word);
    palavra = "";
}

bool createTokens() { // cria os tokens e insere na lista Lex
    char c;
    bool res = true;

    while (!in.eof()) {
        in.get(c);
        coluna++;
        lookahead = in.peek();
        if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) { // reconhece id.
            id(c);
            flag = "id";
        }
        if ((c >= 0) && (c <= 9)) { // reconhece Números
            numero(c);
            flag = "numero";
        }
        if ((lookahead == ' ') || (lookahead == '\n') || (lookahead == '\t') || (lookahead == '#')) { // reconhece final de: token, linha.
            if (!palavra.empty()) {
		            insertList();
                flag = "Inicio";
            }
        }
        if (c == '#') { // reconhece comentários
            if (!palavra.empty()) {
                insertList();
                flag = "Inicio";
            }
            comment(c);
        }
        if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || (c == '#') || (c == ' ') || (c == '\n'))) {
            lookahead = c;
            res = false;
            break;
        }
        if (c == '\n') {
            linha++;
            coluna = 0;
        }
    }
    return res;
}

void geraArquivo (){
    for (list<token>::const_iterator iterator = lex.begin(), end = lex.end(); iterator != end; ++iterator) {
        out << "(";
        out << iterator->line;
        out << ",";
        out << iterator->col_init;
        out << ",";
        out << iterator->col_finish;
        out << ",";
        out << iterator->type;
        out << ",";
        out << iterator->lexema;
        out << ")";
        out << endl;
    }
}

/* Função que retorna o resultado da tabela */

string tableMove (string state, string lexema) {
    int i, j, x;
    string p;

    if (state == "1" && lexema == "execucaoinicio")
        return "estado2";
    for (i = 1; i < 77; i++){
        for (j = 0; j < 60; j++){
            p = string(table[0][j]);
	        transform(p.begin(), p.end(), p.begin(), ::tolower);
            x = atoi(p.c_str());
            if (table[i][0] == state && p == lexema){
                if (x >= 0 && x <= 75)
                    p = "estado"+p;
                return string(p);
            }
        }
    }
    return "ERRO";
}

/* Autômato SLR */
void slr(){
    Lista i;
    string aux, top;
    string estado = "s0";

    for (i = lexico; (i); i = i->prox){
        aux = string(i->no.lexema);
        transform(aux.begin(), aux.end(), aux.begin(), ::tolower);
        if (pilha.empty && estado == "s0")
            goto s0;
        if (estado == "s1"){
            goto s1;
        }
        if (estado == "s2"){
            goto s2;
        }
        if (estado == "ERRO"){
            goto fimslr;
        }
        estado0:
        s0:
        if (estado == "s0" && aux == "programainicio"){
            estado = tableMove("0", string(aux));
            top = string(i->no.lexema);
            pilha.push(aux);
            pilha.push("1");
            goto fimfor;
        }else {
            cout << "ERRO Sintático, na linha " << i->no.line << " coluna " << (i->no.col_finish - i->no.col_init) << endl;
        }
        estado1:
        if (estado == "s1"){
            goto s1;
        }else if (estado == "r1"){
            goto r1;
        }
        s1:
        if (estado == "s1" && aux == "execucaoinicio"){
            estado = tableMove("1", string(aux));
            goto estado2;
        }else if (estado == "s1" && aux == "definainstrucao"){
            estado = tableMove("1", string(aux));
            goto estado4;
        }
        r1:
        estado2:
        if (estado == "estado2" && aux == "execucaoinicio")
            goto r2;
        s2:
        estado = tableMove("2", string(aux));
        top = string(i->no.lexema);
        pilha.push(aux);
        pilha.push(estado);
        r2:
        if (aux == "execucaoinicio"){
            estado = tableMove("2", string(aux));
            top = string(i->no.lexema);
            pilha.push(aux);
            pilha.push("5");
            goto fimfor;
        }
        estado3:
        s3:
        r3:
        estado4:
        s4:
        r4:
        estado5:
        s5:
        estado = tableMove("5", string(aux));
        top = string(i->no.lexema);
        pilha.push(aux);
        pilha.push(estado);
        r5:
        fimfor:
    }
    fimslr:
}

int main(int argc, char *argv[]){

    bool result;

    if (argc < 3) {
        cout << "Insira o nome do arquivo de entrada!" << endl;
    }else {
        in.open(argv[1], ios::out | ios::in);
        out.open(argv[2], ios::out);
    }
    result = createTokens(); // recebe a resposta se o léxico obteve um erro ou não
    geraArquivo();

    if (!result) {
        cout << "ERRO [Lexico], caracter: " << lookahead << " linha: " << linha << " coluna: " << coluna - (palavra.length()) << endl;
        out << "(" << linha << ", " << coluna - (palavra.length()) << ", " << coluna << ", " << "ERROR, " << lookahead << endl;
    }
    slr();
    in.close();
    out.close();
    return 0;
}
